#!/bin/bash

# Script de inicio r√°pido para RastreApp
# Uso: ./start.sh [docker|manual]

set -e

echo "üöõ RastreApp - Sistema de Gesti√≥n de Transporte"
echo "================================================"

# Funci√≥n para mostrar ayuda
show_help() {
    echo "Uso: ./start.sh [opci√≥n]"
    echo ""
    echo "Opciones:"
    echo "  docker    - Levantar con Docker (recomendado)"
    echo "  manual    - Levantar manualmente"
    echo "  help      - Mostrar esta ayuda"
    echo ""
    echo "Ejemplos:"
    echo "  ./start.sh docker"
    echo "  ./start.sh manual"
}

# Funci√≥n para levantar con Docker
start_docker() {
    echo "üê≥ Iniciando RastreApp con Docker..."
    
    # Verificar si Docker est√° instalado
    if ! command -v docker &> /dev/null; then
        echo "‚ùå Docker no est√° instalado. Por favor instala Docker Desktop."
        exit 1
    fi
    
    # Verificar si Docker Compose est√° disponible
    if ! command -v docker-compose &> /dev/null; then
        echo "‚ùå Docker Compose no est√° disponible."
        exit 1
    fi
    
    echo "üì¶ Construyendo im√°genes..."
    docker-compose up -d --build
    
    echo "‚è≥ Esperando que los servicios est√©n listos..."
    sleep 10
    
    echo "üå± Poblando base de datos..."
    docker-compose exec server npm run seed
    
    echo ""
    echo "‚úÖ RastreApp iniciado correctamente!"
    echo ""
    echo "üåê URLs de acceso:"
    echo "  Frontend:     http://localhost:3000"
    echo "  API:          http://localhost:3001/api"
    echo "  MongoDB:      localhost:27017"
    echo "  Mongo Express: http://localhost:8081"
    echo ""
    echo "üìã Comandos √∫tiles:"
    echo "  Ver logs:     docker-compose logs -f"
    echo "  Detener:      docker-compose down"
    echo "  Reiniciar:    docker-compose restart"
}

# Funci√≥n para levantar manualmente
start_manual() {
    echo "üîß Iniciando RastreApp manualmente..."
    
    # Verificar si Node.js est√° instalado
    if ! command -v node &> /dev/null; then
        echo "‚ùå Node.js no est√° instalado. Por favor instala Node.js 18+."
        exit 1
    fi
    
    # Verificar si npm est√° disponible
    if ! command -v npm &> /dev/null; then
        echo "‚ùå npm no est√° disponible."
        exit 1
    fi
    
    # Verificar si MongoDB est√° ejecut√°ndose
    if ! pgrep -x "mongod" > /dev/null; then
        echo "‚ö†Ô∏è  MongoDB no est√° ejecut√°ndose."
        echo "   Por favor inicia MongoDB antes de continuar:"
        echo "   - macOS: brew services start mongodb-community"
        echo "   - Ubuntu: sudo systemctl start mongod"
        echo "   - Windows: net start MongoDB"
        exit 1
    fi
    
    echo "üì¶ Instalando dependencias..."
    npm install
    
    echo "üå± Poblando base de datos..."
    npm run seed
    
    echo "üöÄ Iniciando aplicaci√≥n..."
    npm run dev:full
    
    echo ""
    echo "‚úÖ RastreApp iniciado correctamente!"
    echo ""
    echo "üåê URLs de acceso:"
    echo "  Frontend: http://localhost:3000"
    echo "  API:      http://localhost:3001/api"
}

# Procesar argumentos
case "${1:-docker}" in
    "docker")
        start_docker
        ;;
    "manual")
        start_manual
        ;;
    "help"|"-h"|"--help")
        show_help
        ;;
    *)
        echo "‚ùå Opci√≥n inv√°lida: $1"
        echo ""
        show_help
        exit 1
        ;;
esac
